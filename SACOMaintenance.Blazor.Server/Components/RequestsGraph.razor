
<h3>Requests Status Graph</h3>
@inject SACOMaintenance.ViewModel.Interfaces.IRequestsGraphViewModel requestGraphViewModel
@using System.Globalization

<RadzenChart>
    <RadzenColumnSeries Data="@statusData" CategoryProperty="statusName" Title="Status Type"
                        ValueProperty="number"></RadzenColumnSeries>
    <RadzenColumnOptions Radius="5"/>
    <RadzenValueAxis>
        <RadzenGridLines Visible="true"/>
        <RadzenAxisTitle Text="Number of Status"/>
    </RadzenValueAxis>
</RadzenChart>

@code {

    public class DataItem
    {
        public int number { get; set; }
        public string statusName { get; set; }
    }

    //public DataItem[] statusData = new DataItem[2];

    public static int closedCount = 0;
    public static int newCount = 0;
    public static int countAssigned = 0;
    public static int onHoldCount = 0;
    public static int cancelledCount = 0;

    protected override async Task OnInitializedAsync()
    {
        Task.Run(async ()=> { await requestGraphViewModel.GetRequestsByStatusCount(); }).Wait();

        closedCount = requestGraphViewModel.closedCount;
        newCount = requestGraphViewModel.newCount;
        onHoldCount = requestGraphViewModel.onHoldCount;
    }

    DataItem[] statusData = new DataItem[]
    {
            new DataItem
            {
                number = closedCount,
                statusName = "Closed"
            },
            new DataItem
            {
                number = newCount,
                statusName = "New"
            },
            new DataItem
            {
                number = countAssigned,
                statusName = "Assigned"
            },
            new DataItem
            {
                number = onHoldCount,
                statusName = "On Hold"
            },
            new DataItem
            {
                number = cancelledCount,
                statusName = "Cancelled"
            }
    };
    // getStatusCount();


    //public void getStatusCount()
    //{
    //    closedCount = requestGraphViewModel.GetRequestsByStatusCount(3).Result;
    //    newCount = requestGraphViewModel.GetRequestsByStatusCount(1).Result;
    //    //countAssigned = requestGraphViewModel.GetRequestsByStatusCount(8).Result;


    //    DataItem[] statusData = new DataItem[]
    //    {
    //        new DataItem
    //        {
    //            number = closedCount,
    //            statusName = "Closed"
    //        },
    //        new DataItem
    //        {
    //            number = newCount,
    //            statusName = "New"
    //        },
    //        new DataItem
    //        {
    //            number = countAssigned,
    //            statusName = "Assigned"
    //        }
    //    };
    //}
}
