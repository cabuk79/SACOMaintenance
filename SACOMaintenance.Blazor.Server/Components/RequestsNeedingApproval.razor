@inject SACOMaintenance.ViewModel.Interfaces.IRequestAuthorisation AuthViewModel
@using SACOMaintenance.Common.ModelDB 

@if(ApprovalType == "AuthorityToWork")
{
    <RadzenGrid Data="AuthViewModel.AuthroizationsForUser" TItem="AuthorizationRequest">
        <Columns>
            <RadzenGridColumn TItem="AuthorizationRequest" Property="MaintRequestInitiationId" Title="Request Number">
                <Template Context="data">
                    MAINT-@data.MaintRequestInitiationId
                </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="AuthorizationRequest" Property="RequestedDate" Title="Requested Date"></RadzenGridColumn>
            <RadzenGridColumn TItem="AuthorizationRequest" Property="MaintRequestInitiationId" Width="60px">
                <Template Context="data">
                    <a href="@($"maint-req/auth/{data.MaintRequestInitiationId}/{data.Id}")" class="btn btn-primary table-btn">
                        <i class="fa fa-eye"></i>
                    </a>
                </Template>
            </RadzenGridColumn>
        </Columns>
    </RadzenGrid>
}
@if(ApprovalType == "SignOff")
{
    <RadzenGrid Data="AuthViewModel.SignOffRequest" TItem="AuthorizationRequest">
    <Columns>
        <RadzenGridColumn TItem="AuthorizationRequest" Property="MaintRequestInitiationId" Title="Request Number">
            <Template Context="data">
                MAINT-@data.MaintRequestInitiationId
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="AuthorizationRequest" Property="RequestedDate" Title="Requested Date"></RadzenGridColumn>
        <RadzenGridColumn TItem="AuthorizationRequest" Property="MaintRequestInitiationId" Width="60px">
            <Template Context="data">
                <a href="@($"maint-req/auth/{data.MaintRequestInitiationId}/{data.Id}")" class="btn btn-primary table-btn">
                    <i class="fa fa-eye"></i>
                </a>
            </Template>
        </RadzenGridColumn>
    </Columns>
</RadzenGrid>
}

@code {
    [Parameter]
    public string UserId { get; set; }

    [Parameter]
    public string ApprovalType { get; set;  }

    protected override async Task OnInitializedAsync()
    {
        Task.Run(async () =>
        {
            await AuthViewModel.MaintReqsNeedingApproval(ApprovalType, UserId , "Requested");
        }).Wait();
    }

}
