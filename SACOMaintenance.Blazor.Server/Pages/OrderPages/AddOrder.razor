@page "/testingorder"
@using SACOMaintenance.Common.ModelDB
@inject SACOMaintenance.ViewModel.Interfaces.IOrderViewModel orderViewModel

<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <h3>Adding new order</h3>
            <hr />
        </div>
    </div>

    <div class="row">
        <div class="col-lg-4"><RadzenLabel Text="Date Test"></RadzenLabel></div>
        <div class="col-lg-4"><RadzenLabel Text="Supplier"></RadzenLabel></div>
        <div class="col-lg-4"><RadzenLabel Text="Department"></RadzenLabel></div>
    </div>
    <div class="row">
        <div class="col-lg-4"><RadzenDatePicker DateFormat="d" TValue="DateTime?"></RadzenDatePicker></div>
        <div class="col-lg-4"><RadzenDropDown TValue="int" Data="@orderViewModel.Suppliers"
                        TextProperty="Name" ValueProperty="Id"></RadzenDropDown></div>
        <div class="col-lg-4"><RadzenDropDown TValue="string"></RadzenDropDown></div>
    </div>
    <div class="row">
        <div class="col-lg-12"><RadzenLabel Text="Description"></RadzenLabel></div>
    </div>
    <div class="row">
        <div class="col-lg-12"><RadzenTextArea Style="width: 100%"></RadzenTextArea></div>
    </div>
    <div class="row">
        <div class="col-lg-2"><button type="button" @onclick="(() => Showdialog())">Add Item</button></div>
    </div>
    <div class="row">
        <div class="col-lg-12"><RadzenLabel Text="Items in order"></RadzenLabel></div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <RadzenGrid TItem="OrderItem" Data="@OrderItemsList" @ref="OrderItemsTable">
                <Columns>
                   @* <RadzenGridColumn TItem="string" Title="Id"></RadzenGridColumn>*@
                    <RadzenGridColumn TItem="OrderItem" Title="Item Name" Property="ItemName"></RadzenGridColumn>
                    <RadzenGridColumn TItem="OrderItem" Title="Description" Property="Comments"></RadzenGridColumn>
                    <RadzenGridColumn TItem="OrderItem" Title="Qty" Property="Qty"></RadzenGridColumn>
                    <RadzenGridColumn TItem="OrderItem" Title="Price" Property="Price">
                        <Template Context="price">
                            @String.Format(new System.Globalization.CultureInfo("en-GB"), "{0:C}", price.Price)
                        </Template>
                    </RadzenGridColumn>
                    <RadzenGridColumn TItem="OrderItem" Title="Total Price Per Part" Property="FullPrice">
                        <FooterTemplate>
                            Order Total: <b>@String.Format(new System.Globalization.CultureInfo("en-GB"), "{0:C}", OrderItemsList.Sum(o => o.FullPrice))</b>
                        </FooterTemplate>
                    </RadzenGridColumn>    
                </Columns>
            </RadzenGrid>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-2"><RadzenButton Text="Save"></RadzenButton></div>
        <div class="col-lg-2"><RadzenButton Text="Close"></RadzenButton></div>
    </div>


    <h1>Item orders</h1><br /><br />
    @foreach(var orderItem in OrderItemsList)
    {
        @orderItem.Comments

    }

</div>


@if(ShowPopup)
{
    <div class="modal" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog" style="border-color: black">
            <div class="modal-content">
                <div class="modal-body">
                    <OrderItemPage @bind-OrderItems="OrderItemsList"
                    OnClickCallback="@UpdatePage" CloseDialogCallback="@CloseDialog">            
                    </OrderItemPage>
                </div>
            </div>
        </div>
    </div>
}

@code {
    public List<OrderItem> OrderItemsList = new List<OrderItem>();
    public RadzenGrid<OrderItem> OrderItemsTable = new();

    bool ShowPopup = false;

    protected override async Task OnInitializedAsync()
    {
        Task.Run(async () => { await orderViewModel.LoadSuppliers(); }).Wait();
        OrderItem testingitem = new();
        testingitem.Comments = "ttttest";
        OrderItemsList.Add(testingitem);

    }

    public void UpdatePage()
    {
        OrderItemsTable.Reload();
        //StateHasChanged();
    }


    void Showdialog()
    {
        ShowPopup = true;
    }

    void CloseDialog()
    {
        ShowPopup = false;
    }

}
