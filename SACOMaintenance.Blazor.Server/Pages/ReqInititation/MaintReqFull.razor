@page "/maint-req/full-add/{MaintReqID}"
@using SACOMaintenance.Common.ModelDB
@inject SACOMaintenance.ViewModel.Interfaces.IMaintRequestFullViewModel maintReqInitation
@using SACOMaintenance.Blazor.Server.Components
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager


<h3>Maintenance Request @maintReqInitation.maintReqId</h3>

<RadzenButton Click=@(args => maintReqInitation.ExportRequest()) Text="Create Request Form Word"
              Icon="import_export" ButtonStyle="ButtonStyle.Secondary"></RadzenButton>


<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            <div class="row">
                <div class="col-lg-6">
                    <div class="row">
                        <div class="col-lg-12">
                            <RadzenFieldset Text="Details" Style="border-color: black">
                                <div class="row">
                                    <div class="col-lg-4"><RadzenLabel Style="font-weight: bold" Text="Factory" /></div>
                                    <div class="col-lg-4"><RadzenLabel Style="font-weight: bold" Text="Area" /></div>
                                    <div class="col-lg-4"><RadzenLabel Style="font-weight: bold" Text="Equipment" /></div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4"><span>@maintReqInitation.factoryName</span></div>
                                    <div class="col-lg-4"><span>@maintReqInitation.areaName</span></div>
                                    <div class="col-lg-4"><span>@maintReqInitation.equipName</span></div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class="row">
                                            <div class="col-lg-12">
                                                <label style="font-weight:bold">Details</label>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-12">
                                                <div class="card text-black" style="width: 100%">
                                                    <div class="card-body">
                                                        <div class="row">
                                                            <div class="col-lg-12">
                                                                @((MarkupString)detailMarkUp)
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </RadzenFieldset>
                        </div>
                    </div>
                    <dicv class="row">
                        <div class="col-lg-12">
                            <RadzenFieldset Text="Isolations" Style="border-color: black" AllowCollapse="true">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <CheckListBox Data="@maintReqInitation.Isolations"
                                                      TextField="@((item)=>item.Name)"
                                                      ValueField="@((item)=>item.Id)"
                                                      SelectedValues="@(maintReqInitation.SelectedIsolationIds)">
                                        </CheckListBox>
                                    </div>
                                </div>
                            </RadzenFieldset>
                        </div>
                    </dicv>
                </div>
                <div class="col-lg-6">
                    <div class="row">
                        <div class="col-lg-12">
                            <RadzenButton Click="@UpdateRisks"></RadzenButton>
                            <RadzenFieldset Text="Risk Assemssment" Style="border-color: black">
                                <RadzenGrid Data="@maintReqInitation.RiskInfoList" TItem="MaintRequestInitiationRisk">
                                    <Columns>
                                        <RadzenGridColumn TItem="MaintRequestInitiationRisk" Property="RiskId" Title="Risk Name" Width="15px">
                                            <Template Context="data">
                                                @foreach (var riskItem in maintReqInitation.Risks)
                                                {
                                                    if (riskItem.Id == data.RiskId)
                                                    {
                                                        @riskItem.RiskName
                                                    }
                                                }
                                            </Template>
                                        </RadzenGridColumn>
                                        <RadzenGridColumn TItem="@MaintRequestInitiationRisk" Property="RiskLevel" Title="H" Width="10px">
                                            <Template Context="data">
                                                @if (data.M == true || data.L == true || isReadOnly == true)
                                                {
                                                    <RadzenCheckBox @bind-Value="data.H" TValue="bool" Style="border-color: black" Disabled="true"></RadzenCheckBox>
                                                }
                                                else
                                                {
                                                    <RadzenCheckBox @bind-Value="data.H" TValue="bool" Style="border-color: black"></RadzenCheckBox>
                                                }
                                            </Template>
                                        </RadzenGridColumn>
                                        <RadzenGridColumn TItem="@MaintRequestInitiationRisk" Property="RiskLevel" Title="M" Width="10px">
                                            <Template Context="data">
                                                @if (data.H == true || data.L == true || isReadOnly == true)
                                                {
                                                    <RadzenCheckBox @bind-Value="data.M" TValue="bool" Style="border-color: black" Disabled="true"></RadzenCheckBox>
                                                }
                                                else
                                                {
                                                    <RadzenCheckBox @bind-Value="data.M" TValue="bool" Style="border-color: black"></RadzenCheckBox>
                                                }
                                            </Template>
                                        </RadzenGridColumn>
                                        <RadzenGridColumn TItem="@MaintRequestInitiationRisk" Property="RiskLevel" Title="L" Width="10px">
                                            <Template Context="data">
                                                @if (data.H == true || data.M == true || isReadOnly == true)
                                                {
                                                    <RadzenCheckBox @bind-Value="data.L" TValue="bool" Style="border-color: black" Disabled="true"></RadzenCheckBox>
                                                }
                                                else
                                                {
                                                    <RadzenCheckBox @bind-Value="data.L" TValue="bool" Style="border-color: black"></RadzenCheckBox>
                                                }
                                            </Template>
                                        </RadzenGridColumn>
                                    </Columns>
                                </RadzenGrid>
                            </RadzenFieldset>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            @if (maintReqInitation.maintReqAreaId == 1)  //This ID 1 refers to the plant Area so either plant 1 or 2
            {
                @*<PlantMaintReqComponent maintReqID="maintReqInitation.maintReqId"></PlantMaintReqComponent>*@
            }
            else
            {
                <GeneralMaintReqComponent maintReq="maintReqInitation.maintReqInitation" ReqReadOnly="false" ReqReadOnlyChanged="ReqChangeBool"></GeneralMaintReqComponent>
            }
        </div>
    </div>
</div>




@*<EditForm Model="maintReqInitation">
    <div class="container-fluid" style="border:1px solid">
        <div class="row">
            <h3>Request For Work Information</h3>
        </div>
        <div class="row">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-lg-3">
                        <strong><label>Factory:  </label></strong>@maintReqInitation.factoryName
                    </div>
                    <div class="col-lg-3">
                        <strong><label>Area:   </label></strong>@maintReqInitation.areaName
                    </div>
                    <div class="col-lg-3">
                        <strong><label>Equipment:   </label></strong>@maintReqInitation.equipName
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="container-fluid">
                <div class="row">
                    <label style="font-weight:bold">Details</label>
                    <InputTextArea @bind-Value="maintReqInitation.maintReqDetails" class="form-control"></InputTextArea>
                </div>
            </div>
        </div>
    </div>



    <RadzenTabs RenderMode="TabRenderMode.Client" Style="border-color: black">
        <Tabs>
            <RadzenTabsItem Text="Risk Assessment">
                <div class="row">
                    <div class="col-lg-6">

                    </div>
                </div>
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>*@


<!--<div class="form-group-row">-->
<!-- Choose the correct container for the maintenance request -->
<!--@{
            if (maintReqInitation.maintReqAreaId == 31)  //This ID 31 refers to the plant Area so either plant 1 or 2
            {
                <PlantMaintReqComponent maintReqID="maintReqInitation.maintReqId"></PlantMaintReqComponent>
            }
            else
            {
                <GeneralMaintReqComponent maintReqID="maintReqInitation.maintReqId"></GeneralMaintReqComponent>
            }
        }
    </div>
</EditForm>-->

@code {
    [Parameter]
    public string maintReqID { get; set; }

    string detailMarkUp;

    string value = "";
    private bool isReadOnly = false;

    private void ReqChangeBool(bool isReadOnlyPage)
    {
        isReadOnly = isReadOnlyPage;
    }


    public void Testing()
    {

    }


    protected async Task UpdateRisks()
    {
        maintReqInitation.UpdateMaintReqRisks();
        if (IsConnected) SendMessage();
    }

    Task SendMessage() => hubConnection.SendAsync("ReceiveMessageSingleReq");

    public bool moveCol = false;

    public enum RiskLevelLetter { H, M, L }

    protected override async Task OnInitializedAsync()
    {
        maintReqInitation.GetMaintReqInitation(Convert.ToInt32(maintReqID));

        // maintReqInitation.LoadRiskLevel(Convert.ToInt32(maintReqID));

        maintReqInitation.LoadFactories();

        maintReqInitation.LoadRisks();

        maintReqInitation.LoadMaintRiskData(maintReqInitation.maintReqId);
        maintReqInitation.LoadIsolations();
        maintReqInitation.LoadIsoaltionsByMaint();

        detailMarkUp = maintReqInitation.maintReqDetails;


        //Auto update
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/broadcastHub"))
            .Build();

        hubConnection.On("ReceiveMessageSingleReq", () =>
        {
            CallLoadData();
            StateHasChanged();
        });

       await hubConnection.StartAsync();
    }



    //Auto update code
    //TODO: may need to remove this or modiy to suit
    private HubConnection hubConnection;

    private void CallLoadData()
    {
        Task.Run(async () =>
        {
            maintReqInitation.GetMaintReqInitation(Convert.ToInt32(maintReqID));
            maintReqInitation.LoadMaintRiskData(Convert.ToInt32(maintReqID));
        });
    }

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;

    public void Dispose()
    {
        _ = hubConnection.DisposeAsync();
    }
}
