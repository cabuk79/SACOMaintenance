@page "/maint-req/add"
@inject SACOMaintenance.ViewModel.Interfaces.IMaintReqNewViewModel AddReqViewModel
@inject NotificationService NotificationService
@inject NavigationManager NavigationManager
@using SACOMaintenance.Common.ModelDB
@using Microsoft.AspNetCore.SignalR.Client

<RadzenNotification></RadzenNotification>

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            <h3>Add New Maintenance Request</h3>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <RadzenFieldset Text="Enter Request Details">
                <div class="row">
                    <div class="col-lg-4">
                        <RadzenLabel Text="Priority"></RadzenLabel>
                        <RadzenDropDown AllowClear="true" TValue="int" Style="width: 100%; border-color: black"
                                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                        @bind-Value="@AddReqViewModel.PriorityId" FilterOperator="StringFilterOperator.Contains"
                                        AllowFiltering="true"
                                        Data="@AddReqViewModel.Priorities" TextProperty="Name" ValueProperty="Id">
                            <Template>
                                <div class="row">
                                    <div class="col-lg-1">
                                        <i class="@((context as Priority).Icon)"></i>
                                    </div>
                                    <div class="col-lg-5">
                                        @((context as Priority).Name)
                                    </div>
                                </div>
                            </Template>
                        </RadzenDropDown>
                    </div>
                    <div class="col-lg-4">
                        <RadzenLabel Text="Company"></RadzenLabel>
                        <RadzenDropDown AllowClear="true" TValue="int" Style="width: 100%; border-color: black"
                                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                        @bind-Value="@AddReqViewModel.CompanyId" FilterOperator="StringFilterOperator.Contains"
                                        AllowFiltering="true"
                                        Data="@AddReqViewModel.Companies" TextProperty="CompantName" ValueProperty="Id">
                        </RadzenDropDown>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-4">
                        <RadzenLabel Text="Factory"></RadzenLabel>
                        <RadzenDropDown AllowClear="true" TValue="int" Style="width: 100%; border-color: black"
                                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                        @bind-Value="@AddReqViewModel.FactoryId" FilterOperator="StringFilterOperator.Contains"
                                        AllowFiltering="true"
                                        Data="@AddReqViewModel.Factories" TextProperty="FactoryName" ValueProperty="Id">
                        </RadzenDropDown>
                    </div>
                    <div class="col-lg-4">
                        @if (AddReqViewModel.Areas != null)
                        {
                            var numberAreasEquipment = AddReqViewModel.Areas.Count();
                            if (numberAreasEquipment > 0)
                            {
                                <RadzenLabel Text="Area"></RadzenLabel>
                                <RadzenDropDown AllowClear="true" TValue="int" Style="width: 100%; border-color: black"
                                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                @bind-Value="@AddReqViewModel.AreaId" FilterOperator="StringFilterOperator.Contains"
                                                AllowFiltering="true"
                                                Data="@AddReqViewModel.Areas" TextProperty="AreaName" ValueProperty="Id">
                                </RadzenDropDown>
                                <RadzenLabel Text="If the area is want is not in the list please contact maintenance!"></RadzenLabel>
                            }
                        }
                    </div>
                    <div class="col-lg-4">
                        @if (AddReqViewModel.Equipment != null)
                        {
                            var numberEuipmentItems = AddReqViewModel.Equipment.Count();
                            if (numberEuipmentItems > 0)
                            {
                                <RadzenLabel Text="Equipment"></RadzenLabel>
                                <RadzenDropDown AllowClear="true" TValue="int" Style="width: 100%; border-color: black"
                                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                @bind-Value="@AddReqViewModel.EquipmentId" FilterOperator="StringFilterOperator.Contains"
                                                AllowFiltering="true"
                                                Data="@AddReqViewModel.Equipment" TextProperty="Name" ValueProperty="Id">
                                </RadzenDropDown>
                                <RadzenLabel Text="If the area is want is not in the list please contact maintenance!"></RadzenLabel>
                            }
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <RadzenHtmlEditor @bind-Value="AddReqViewModel.MaintReq.RequestDetails" Style="height: 500px; border-color: black"></RadzenHtmlEditor>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <RadzenButton Click="@UpdateBook" Text="Save New Request" Icon="save" Style="margin-bottom: 20px; width: 200px" />
                    </div>
                </div>
            </RadzenFieldset>
        </div>
    </div>    
</div>

@code {
  
    private HubConnection hubConnection;

    protected override async Task OnInitializedAsync()
    {  
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/broadcastHub"))
            .Build();

        await hubConnection.StartAsync();
    }

    protected async Task UpdateBook()
    {
        AddReqViewModel.AddNewRequest();
     
        if (IsConnected) await SendMessage();

        ShowNotification(new NotificationMessage
        {
            Severity = NotificationSeverity.Success,
            Summary = "Saved",
            Detail = "New maintenance request saved to database!",
            Duration = 4000
        });
    }

    void ShowNotification(NotificationMessage message)
    {
        NotificationService.Notify(message);
    }

    Task SendMessage() => hubConnection.SendAsync("SendMessage");

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;

    public void Dispose()
    {
        _ = hubConnection.DisposeAsync();
    }
}
