@page "/maint-req/add"
@inject SACOMaintenance.ViewModel.Interfaces.IMaintReqNewViewModel AddReqViewModel
@inject NotificationService NotificationService
@inject NavigationManager NavigationManager
@using SACOMaintenance.Common.ModelDB
@using Microsoft.AspNetCore.SignalR.Client

<RadzenNotification></RadzenNotification>

<div class="row">
    <div class="container-fluid">
        <div>
            <h3>Add New Maintenance Request</h3>
        </div>
        
        <div>
            <EditForm Model="AddReqViewModel.MaintReq">
                <div class="form-group">
                    <div class="form-group-row">
                        <label style="font-weight:bold">Details</label>
                        <InputTextArea @bind-Value="AddReqViewModel.MaintReq.RequestDetails" class="form-control" placeholder="Enter the details of the request"></InputTextArea>
                    </div>
                </div>
                <div class="form-group-row">
                    <div class="row">
                        <div class="col-lg-4">
                            <label style="font-weight:bold">Factory</label>
                            <RadzenDropDown AllowClear="true" TValue="int" Style="width:100%;"
                                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                            @bind-Value="@AddReqViewModel.FactoryId" FilterOperator="StringFilterOperator.Contains"
                                            AllowFiltering="true"
                                            Data="@AddReqViewModel.Factories" TextProperty="FactoryName" ValueProperty="Id">
                            </RadzenDropDown>
                            <p>If the factory you want is not in the list contact maintenance!</p>
                        </div>
                        @if (AddReqViewModel.Areas != null)
                        {
                            var numberAreasEquipment = AddReqViewModel.Areas.Count();
                            if (numberAreasEquipment > 0)
                            {
                                <div class="col-lg-4">
                                    <label style="font-weight:bold">Area</label>
                                    <RadzenDropDown AllowClear="true" TValue="int" Style="width:100%;"
                                                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                    @bind-Value="@AddReqViewModel.AreaId" FilterOperator="StringFilterOperator.Contains"
                                                    AllowFiltering="true"
                                                    Data="@AddReqViewModel.Areas" TextProperty="AreaName" ValueProperty="Id">
                                    </RadzenDropDown>
                                    <p>If the area is want is not in the list please contact maintenance!</p>
                                </div>
                            }
                        }

                        @if (AddReqViewModel.Equipment != null)
                        {
                            var numberEuipmentItems = AddReqViewModel.Equipment.Count();
                            if (numberEuipmentItems > 0)
                            {
                                <div class="col-lg-4">
                                    <label style="font-weight:bold">Equipment</label>
                                    <RadzenDropDown AllowClear="true" TValue="int" Style="width:100%;"
                                                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                    @bind-Value="@AddReqViewModel.EquipmentId" FilterOperator="StringFilterOperator.Contains"
                                                    AllowFiltering="true"
                                                    Data=@AddReqViewModel.Equipment TextProperty="Name" ValueProperty="Id">
                                    </RadzenDropDown>
                                    <p>If the equipment is not there contact maintenance!</p>
                                </div>
                            }
                        }
                    </div>
                </div>
            </EditForm>
            <div class="area-button-group">
                <RadzenButton Click="@UpdateBook" Text="Save New Request" Icon="save" Style="margin-bottom: 20px; width: 200px" />
            </div>
        </div>
    </div>
</div>

@code {
  
    private HubConnection hubConnection;

    protected override async Task OnInitializedAsync()
    {  
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/broadcastHub"))
            .Build();

        await hubConnection.StartAsync();
    }

    protected async Task UpdateBook()
    {
        AddReqViewModel.AddNewRequest();
     
        if (IsConnected) await SendMessage();

        ShowNotification(new NotificationMessage
        {
            Severity = NotificationSeverity.Success,
            Summary = "Saved",
            Detail = "New maintenance request saved to database!",
            Duration = 4000
        });
    }

    void ShowNotification(NotificationMessage message)
    {
        NotificationService.Notify(message);
    }

    Task SendMessage() => hubConnection.SendAsync("SendMessage");

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;

    public void Dispose()
    {
        _ = hubConnection.DisposeAsync();
    }
}
