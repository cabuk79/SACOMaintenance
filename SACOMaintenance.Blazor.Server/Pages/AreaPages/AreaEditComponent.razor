@page "/areas"
@using SACOMaintenance.Common.ModelDB
@using SACOMaintenance.DataAccess.Interfaces
@inject SACOMaintenance.ViewModel.Interfaces.IAreaViewModel areaViewModel
@*@inject IArea AreaDataProvider
    @inject IFactory FactoryDataProvider*@


@*Property Area Name:  @areaViewModel.AreaName <br />*@
Model Area Name:  @areaViewModel.AreaName <br />

<div section="header">
    <div class="container-fluid">
        <h1>Areas</h1>
    </div>
</div>

<div section="main-body">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-2">
                <RadzenListBox TValue="int" Data=@areaViewModel.areas TextProperty="AreaName"
                               ValueProperty="Id" Style="height:500px" Name="areasListBox"
                               Change=@(args => OnChange(args, "areasListBox")) />
            </div>

            <div class="col-lg-10">
                <section class="area-form">
                    <div class="area-form-area">
                        <h3>Viewing: @areaViewModel.Area.AreaName</h3>
                        <EditForm Model="@areaViewModel.Area">
                            <div class="form-group">
                                <div class="form-group-row">
                                    <label style="font-weight:bold">Name</label>
                                    <InputText @bind-Value="areaViewModel.Area.AreaName" class="form-control"></InputText>
                                </div>
                                <div class="form-group-row">
                                    <label style="font-weight:bold">Factory</label>
                                    <InputSelect id="factory" class="form-control"
                                                 col-sm-8 @bind-Value="@areaViewModel.FactoryId">
                                        @foreach (var factory in areaViewModel.factories)
                                        {
                                            <option value="@factory.Id">@factory.FactoryName</option>
                                        }
                                    </InputSelect>
                                </div>
                                <div class="form-group-row">
                                    <label style="font-weight:bold">Comments</label>
                                    <RadzenHtmlEditor @bind-Value=@areaViewModel.Area.CommentsNotes></RadzenHtmlEditor>
                                </div>
                            </div>
                        </EditForm>
                    </div>
                    <div class="update-save-buttons">
                        <button class="btn btn-primary" @onclick="@UpdateArea">Save</button>
                        <button class="btn btn-primary">Add New Area</button>
                    </div>
                    
                </section>
            </div>
        </div>
    </div>
</div>







@code {

    //[Parameter]
    //public string AreaId { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await areaViewModel.Load();
    }

    public async Task OnChange(object value, string name)
    {
        //var str = value is IEnumerable<object> ? string.Join(", ", (IEnumerable<object>)value) : value;
        await areaViewModel.LoadSingleArea(Convert.ToInt32(value)); //LoadSingleArea(Convert.ToInt32(value));
        //console.Log($"{name} value changed to {str}");
        StateHasChanged();
    }

    private void UpdateArea(MouseEventArgs e)
    {
        areaViewModel.SaveArea(areaViewModel.Area);
    }

    //private AreaModel AreaModelItem { get; set; } = new AreaModel();
    //private IEnumerable<Factory> FactoryList; // { get; set; } = new IEnumerable<Factory>();
}

