

@inject SACOMaintenance.ViewModel.Interfaces.IDashboardViewModel dashboardViewModel
@using SACOMaintenance.Common.ModelDB
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.SignalR.Client


@foreach (var item in dashboardViewModel.MaintReqs)
    {
        <h1>@item.Id</h1>
    }


<RadzenGrid Data="@dashboardViewModel.MaintReqs" @ref="reqGrid">
    <Columns>
        <RadzenGridColumn TItem="MaintRequestInitiation" Property="Id"></RadzenGridColumn>
        <RadzenGridColumn TItem="MaintRequestInitiation" Property="RequestDetails"></RadzenGridColumn>
        <RadzenGridColumn TItem="MaintRequestInitiation" Property="DateRaised"></RadzenGridColumn>
    </Columns>
</RadzenGrid>





@code{

    private HubConnection hubConnection;
    public RadzenGrid<MaintRequestInitiation> reqGrid { get; set; }

    protected override async Task OnInitializedAsync()
    {


        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/broadcastHub"))
            .Build();

        hubConnection.On("ReceiveMessage", () =>
        {
            CallLoadData();
            reqGrid.Reload();
            InvokeAsync(() => StateHasChanged());

            //StateHasChanged();
        });

        await hubConnection.StartAsync();

        dashboardViewModel.LoadMaintReqs();
    }

    private void CallLoadData()
    {
        Task.Run(async () =>
        {
            dashboardViewModel.LoadMaintReqs();
        });
    }

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;

    public void Dispose()
    {
        _ = hubConnection.DisposeAsync();
    }

}
