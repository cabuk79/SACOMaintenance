@page "/supplier/add"
@inject SACOMaintenance.ViewModel.Interfaces.ISupplierViewModel supplierViewModel
@inject NavigationManager NavigationManager
@using SACOMaintenance.Common.ModelDB


    <div class="container-fluid">
        <div class="row" style="padding: 5px 0px 10px 5px">
            <div class="col-lg-4"><RadzenLabel Text="Add New Supplier - Fill in the Details Below"></RadzenLabel></div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <RadzenFieldset Text="Address Information" Style="border-color: black; height: max-content">
                    <div class="row" style="padding: 5px 5px 5px 5px">
                        <div class="col-lg-6">
                            <div class="row" style="padding: 5px 5px 5px 5px">
                                <div class="col-lg-4"><RadzenLabel Text="Name"></RadzenLabel></div>
                                <div class="col-lg-8">
                                    <RadzenTextBox Style="width: 100%; border-color: black"
                                                   @bind-Value="supplierViewModel.NewSupplier.Name"></RadzenTextBox>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4"><RadzenLabel Text="Address One"></RadzenLabel></div>
                                <div class="col-lg-8">
                                    <RadzenTextBox Style="width: 100%; border-color: black"
                                                   @bind-Value="supplierViewModel.NewSupplier.AddressLineOne"></RadzenTextBox>
                                </div>
                            </div>
                            <div class="row" style="padding: 5px 5px 5px 5px">
                                <div class="col-lg-4"><RadzenLabel Text="Address Two"></RadzenLabel></div>
                                <div class="col-lg-8">
                                    <RadzenTextBox Style="width: 100%; border-color: black"
                                                   @bind-Value="supplierViewModel.NewSupplier.AddressLineTwo"></RadzenTextBox>
                                </div>
                            </div>
                            <div class="row" style="padding: 5px 5px 5px 5px">
                                <div class="col-lg-4"><RadzenLabel Text="County"></RadzenLabel></div>
                                <div class="col-lg-8">
                                    <RadzenTextBox Style="width: 100%; border-color: black" ReadOnly="true"
                                                   @bind-Value="supplierViewModel.NewSupplier.Postcode.County"></RadzenTextBox>
                                </div>
                            </div>
                            <div class="row" style="padding: 5px 5px 5px 5px">
                                <div class="col-lg-4"><RadzenLabel Text="Town"></RadzenLabel></div>
                                <div class="col-lg-8">
                                    <RadzenTextBox Style="width: 100%; border-color: black" ReadOnly="true"
                                                   @bind-Value="supplierViewModel.NewSupplier.Postcode.District"></RadzenTextBox>
                                </div>
                            </div>
                            <div class="row" style="padding: 5px 5px 5px 5px">
                                <div class="col-lg-4"><RadzenLabel Text="Post Code"></RadzenLabel></div>
                                <div class="col-lg-4">
                                    <RadzenTextBox Style="width: 100%; border-color: black"
                                                   @bind-Value="supplierViewModel.NewSupplier.Postcode.PostCode"></RadzenTextBox>
                                </div>
                                    <div class="col-lg-4">
                                        <RadzenButton Text="Search" Click=@(args => PostCodeOnChange(supplierViewModel.NewSupplier.Postcode.PostCode))></RadzenButton>
                                    </div>
                                <div class="row">
                                    <div class="col-lg-12">
                                        @if (hasFoundPostCodeError == true)
                                        {
                                            <RadzenLabel Style="color: red" Text="@postCodeFoundError"></RadzenLabel>
                                        }
                                    </div>
                                </div>
                                <div class="row" style="padding: 5px 5px 5px 5px">
                                    <div class="col-lg-12"><RadzenLabel Text="Comment"></RadzenLabel></div>
                                    <div class="col-lg-12"><RadzenHtmlEditor @bind-Value="supplierViewModel.NewSupplier.Comments"></RadzenHtmlEditor></div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4"><RadzenButton Text="SAVE" Click="@(args => AddNewSupplier())"></RadzenButton></div>
                                </div>                                
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <RadzenGoogleMap Zoom=15 ApiKey="AIzaSyB69EiMRd7IfrT6PK_0T-6H-ESsf8YakMM"
                                             Center=@(new GoogleMapPosition()
                                                  {
                                                      Lat = Convert.ToDouble(supplierViewModel.NewSupplier.Postcode.Latitide),
                                                      Lng = Convert.ToDouble(supplierViewModel.NewSupplier.Postcode.Longitude)
                                                  })>
                                <Markers>
                                    <RadzenGoogleMapMarker Title="@supplierViewModel.NewSupplier.Postcode.District"
                                                           Label="@supplierViewModel.NewSupplier.Postcode.District"
                                                           Position=@(new GoogleMapPosition()
                                                                  {
                                                                      Lat = Convert.ToDouble(supplierViewModel.NewSupplier.Postcode.Latitide),
                                                                      Lng = Convert.ToDouble(supplierViewModel.NewSupplier.Postcode.Longitude)
                                                                  }) />
                                </Markers>
                            </RadzenGoogleMap>
                        </div>
                    </div>
                </RadzenFieldset>
            </div>
        </div>
    </div>



    @code {
        [Parameter]
        public string Id { get; set; }

        string postCodeFoundError;
        bool hasFoundPostCodeError = false;

        protected override void OnInitialized()
        {
            supplierViewModel.CreateEmptySupplier();           
        }

        void AddNewSupplier()
        {
            supplierViewModel.AddNewSupplier();
            NavigationManager.NavigateTo("suppliers-list");
        }


        void PostCodeOnChange(string value)
        {
            supplierViewModel.postcodefound(value, "New");

            if (supplierViewModel.NewSupplier.Postcode.Id == 0)
            {
                postCodeFoundError = "Sorry no post code could be found!";
                hasFoundPostCodeError = true;
            }
            else
            {
                hasFoundPostCodeError = false;
            }
        }
    }
