@typeparam TItem

<div class="container">
    
    <select class="form-control" @onchange="@OnSelect">
        @if(Search == true)
        {
            <input type="text" />        
        }
        @foreach (var item in Items)
        {
            //Get the value of the ID and the Text from the generic list
            var valueOfItem = typeof(TItem).GetProperty(ValueId).GetValue(item);
            var text = typeof(TItem).GetProperty(Text).GetValue(item);
            <option value=@valueOfItem>@text</option>
        }
    </select>
</div>

@code {

    [Parameter]
    public bool Search { get; set; }

    private void OnSelect(ChangeEventArgs e)
    {
        var selectedValueIdString = e.Value.ToString();  //Get the value selected
        SelectedItem = selectedValueIdString;
        SelectedItemChanged.InvokeAsync(SelectedItem); //Call the Eventcallback
        OnClickCallback.InvokeAsync(SelectedItem);
    }

    //The Items to populate the drop down list
    [Parameter]
    public IEnumerable<TItem> Items { get; set; }

    //The ID to be used for the option
    [Parameter]
    public string ValueId { get; set; }

    //The display text wanted for the dropdown list
    [Parameter]
    public string Text {  get;  set; }

    //the item selected from the drop down list
    [Parameter]
    public string SelectedItem { get; set; }

    [Parameter]
    public EventCallback<string> SelectedItemChanged { get; set; }

    [Parameter]
    public EventCallback<string> OnClickCallback {get;set;}

}
